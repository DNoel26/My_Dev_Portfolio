/** @format */

import { mediaQueries } from '../Business_Logic/custom-functions.js';
const UI = {
    /*** GENERAL ***/
    body: document.body,
    googlePreviewModalBtn: document.querySelector("[data-bs-toggle='modal']"),
    googlePreviewModal: document.querySelector('.resume'),
    lazyImgs: document.querySelectorAll('img.lazy'),
    lazySources: document.querySelectorAll('source'),
    lazyBgs: document.querySelectorAll('.lazy-bg'),

    /*** HEADER ***/
    // Header Video
    header: document.querySelector('header'),
    headerVid: document.querySelector('header video'),
    headerVidMulti: document.querySelectorAll('video [data-src]'),
    headerBtns: document.querySelectorAll('button'),
    headerLinks: document.querySelectorAll('a'),
    navContainer: document.querySelector('.nav-container'),
    topNav: document.querySelector('.top-header-nav'),
    botNav: document.querySelector('.bot-header-nav'),
    abovePlaceholder: document.querySelector('#above-placeholder-div'),
    bodyPlaceholder: document.querySelector('body .placeholder-div'),
    headerEmptyDiv: document.querySelector('header .empty-div'),
    scrollIndicator: document.querySelector('#my-bar'),
    activeLists: document.querySelectorAll('.bot-header-nav .nav-item'),
    activeLink: document.querySelector('a.active'),
    anchorLinks: document.querySelectorAll('a.anchor-link'),

    // Hamburger menu button in header
    togglerBtn: document.querySelector('.navbar-toggler'),
    togglerBtnIcon: document.querySelector('.navbar-toggler-icon'),
    togglerBtnWord: document.querySelector('.navbar-toggler-word'),
    navbarScroll: document.querySelector('.navbar-nav-scroll'),
    botNavCollapse: document.querySelector('#bot-header-nav'),

    /*** HOME SECTION ***/
    introMsg: document.querySelector('.intro'),
    welcome: document.querySelector('.welcome'),
    textWrapperMl13: document.querySelector('.ml13'),

    // Generated by the shape divider app (remember to change class name if changing divider using app)
    headerDivider: document.querySelector(
        '.custom-shape-divider-bottom-1612032701',
    ),

    /*** ABOUT SECTION ***/
    aboutSummaryWrapper: document.querySelector(
        '.about-section .summary-wrapper',
    ),
    myAge: document.querySelector("[data-age='my-age']"),
    summaryContainers: document.querySelectorAll('.summary-container'),
    summaryBtn: document.querySelector("[data-id='summary-btn']"),

    /*** SERVICES SECTION ***/
    myCarouselPrevBtn: document.querySelector(
        '.services-section .my-carousel-btn-prev',
    ),
    myCarouselNextBtn: document.querySelector(
        '.services-section .my-carousel-btn-next',
    ),
    myCarouselWrapper: document.querySelector('.my-carousel-wrapper'),
    myCarouselContent: document.querySelector('.my-carousel-content'),
    myCarouselItems: document.querySelectorAll('.my-carousel-item'),

    /*** TOOLS & TECHNOLOGIES SECTION ***/
    tagcloudContent: document.querySelector('.tag-cloud-content'),
    tagcloud: document.querySelector('.tagcloud'),
    tagcloudItems: document.querySelectorAll('.tagcloud--item'),
    skillRatings: document.querySelectorAll('.skill-rating'),
    skillRatingsBeginner: document.querySelectorAll('.skill-rating-beginner'),
    skillRatingsNovice: document.querySelectorAll('.skill-rating-novice'),
    skillRatingsIntermediate: document.querySelectorAll(
        '.skill-rating-intermediate',
    ),
    skillRatingsAdvanced: document.querySelectorAll('.skill-rating-advanced'),
    skillRatingsExpert: document.querySelectorAll('.skill-rating-expert'),

    /*** PROJECT SECTION ***/
    // Development Projects
    returnToDevGalleryBtns: document.querySelectorAll(
        "[data-id='dev-project-gallery']",
    ),
    devProjectGallery: document.getElementById('dev-project-gallery'),
    devProjectOverview: document.getElementById('dev-project-overview'),
    devProjectGalleryBtns: document.querySelectorAll(
        'button[data-dev-project]',
    ),
    devProjectCarousel: document.getElementById('dev-project-carousel'),
    devProjectCarouselIndicatorSection: document.getElementById(
        'dev-project-carousel-indicators',
    ),
    devProjectCarouselInnerSection: document.getElementById(
        'dev-project-carousel-inner',
    ),
    devProjectCarouselNoteSection: document.getElementById(
        'dev-project-carousel-notes',
    ),
    devProjectCarouselIconSection: document.getElementById(
        'dev-project-carousel-icon-section',
    ),
    devProjectCarouselNext: document.querySelectorAll(
        '#dev-project-overview .carousel-control-next',
    ),
    devProjectCarouselPrev: document.querySelectorAll(
        '#dev-project-overview .carousel-control-prev',
    ),

    // Client Projects
    returnToClientGalleryBtns: document.querySelectorAll(
        "[data-id='client-project-gallery']",
    ),
    clientProjectGallery: document.getElementById('client-project-gallery'),
    clientProjectOverview: document.getElementById('client-project-overview'),
    clientProjectGalleryBtns: document.querySelectorAll(
        'button[data-client-project]',
    ),
    clientProjectCarousel: document.getElementById('client-project-carousel'),
    clientProjectCarouselIndicatorSection: document.getElementById(
        'client-project-carousel-indicators',
    ),
    clientProjectCarouselInnerSection: document.getElementById(
        'client-project-carousel-inner',
    ),
    clientProjectCarouselNoteSection: document.getElementById(
        'client-project-carousel-notes',
    ),
    clientProjectCarouselIconSection: document.getElementById(
        'client-project-carousel-icon-section',
    ),
    clientProjectCarouselNext: document.querySelectorAll(
        '#client-project-overview .carousel-control-next',
    ),
    clientProjectCarouselPrev: document.querySelectorAll(
        '#client-project-overview .carousel-control-prev',
    ),

    /*** CONTACT ME SECTION ***/
    formData: document.querySelectorAll('.form-data'),
    countrySelect: document.getElementById('country'),
    phone: document.getElementById('phone'),
    textArea: document.getElementById('message-body'),

    /* Formspree */
    validFeedbackFname: document.querySelector(
        '.valid-feedback.valid-feedback-fname',
    ),
    validFeedbackLname: document.querySelector(
        '.valid-feedback.valid-feedback-lname',
    ),
    validFeedbackEmail: document.querySelector(
        '.valid-feedback.valid-feedback-email',
    ),
    validFeedbackCountry: document.querySelector(
        '.valid-feedback.valid-feedback-country',
    ),
    validFeedbackMessage: document.querySelector(
        '.valid-feedback.valid-feedback-message',
    ),
    invalidFeedbackFname: document.querySelector(
        '.invalid-feedback.invalid-feedback-fname',
    ),
    invalidFeedbackLname: document.querySelector(
        '.invalid-feedback.invalid-feedback-lname',
    ),
    invalidFeedbackEmail: document.querySelector(
        '.invalid-feedback.invalid-feedback-email',
    ),
    invalidFeedbackCountry: document.querySelector(
        '.invalid-feedback.invalid-feedback-country',
    ),
    invalidFeedbackMessage: document.querySelector(
        '.invalid-feedback.invalid-feedback-message',
    ),

    // Fetch all the forms we want to apply custom Bootstrap validation styles to
    formsNeedValidation: document.querySelectorAll('.needs-validation'),

    // Get the form elements defined in your form HTML
    myForm: document.getElementById('my-form'),
    myFormBtn: document.getElementById('my-form-button'),
    myFormStatus: document.getElementById('my-form-status'),
    grecaptchas: document.getElementsByClassName('g-recaptcha'),

    createScripts(...srcs) {
        srcs.forEach((src) => {
            const script = document.createElement('script');
            script.src = src;
            script.setAttribute('async', 'async');
            this.body.appendChild(script);
        });
    },
    loadBgVid() {
        this.headerVidMulti.forEach((vid) => {
            const dataSrc = vid.getAttribute('data-src');
            const dataMedia = vid.getAttribute('data-media');
            const mqLimit = window.matchMedia(dataMedia);

            mediaQueries(
                mqLimit,
                () => {
                    vid.setAttribute('src', dataSrc);
                    vid.setAttribute('media', dataMedia);
                    vid.parentElement.load();
                },
                () => vid.removeAttribute('src'),
            );
        });
    },
    addPosterImgSm() {
        const mqLimit = window.matchMedia('(max-width: 767.98px)');

        mediaQueries(
            mqLimit,
            () => {
                this.headerVid.setAttribute(
                    'poster',
                    './img/base/think-different-700.webp',
                );
            },
            null,
        );
    },
    togglerMenuIconSwitch() {
        setInterval(() => {
            if (
                this.togglerBtnWord.classList.contains('d-none') &&
                this.togglerBtnWord
            ) {
                this.togglerBtnIcon.classList.add('d-none');
                this.togglerBtnWord.classList.remove('d-none');
            } else if (
                this.togglerBtnIcon.classList.contains('d-none') &&
                this.togglerBtnWord
            ) {
                this.togglerBtnIcon.classList.remove('d-none');
                this.togglerBtnWord.classList.add('d-none');
            }
        }, 5000);
    },
    sideMenuReveal() {
        UI.botNavCollapse.classList.add('side-menu-reveal');
        UI.botNavCollapse.classList.remove('side-menu-hide');
    },
    sideMenuHide() {
        UI.botNavCollapse.classList.remove('side-menu-reveal');
        UI.botNavCollapse.classList.add('side-menu-hide');
    },
    mobileMenuReveal() {
        UI.header.classList.add('mobile-menu-reveal');
        UI.header.classList.remove('mobile-menu-hide');
    },
    mobileMenuHide() {
        UI.header.classList.remove('mobile-menu-reveal');
        UI.header.classList.add('mobile-menu-hide');
    },
    noMenu() {
        UI.botNavCollapse.classList.remove('side-menu-hide');
        UI.botNavCollapse.classList.remove('side-menu-reveal');
        UI.header.classList.remove('mobile-menu-hide');
        UI.header.classList.remove('mobile-menu-reveal');
        UI.botNavCollapse.classList.remove('show');
    },
    shrinkHeader() {
        // On scroll, shrinks header and expands body, pauses video, changes to static bg and adjusts height of placeholder elements for smooth transition
        this.body.classList.remove('will-change-height');
        this.navContainer.classList.add('nav-container-sticky');
        this.header.style.height = '100px';
        this.header.style.boxShadow = '0 0.1rem 5rem rgba(0,0,0,0.5)';
        this.headerVid.classList.add('d-none');
        this.headerVid.pause();
        this.header.style.background =
            "linear-gradient(rgba(31,111,139,1), rgba(31,111,139,1)), url('./img/transparent-png-w10.png') no-repeat fixed 100% 100%";

        // On scroll, hides introduction msg and removes top padding from welcome section below
        this.introMsg.classList.add('h-0');
    },
    expandPlaceholderDiv() {
        this.bodyPlaceholder.style.height = '100vh'; // 46.875rem for large, 520px for smaller
        this.bodyPlaceholder.classList.replace('invisible', 'visible');
        this.bodyPlaceholder.classList.replace(
            'placeholder-div-reveal-start',
            'placeholder-div-reveal-end',
        );
    },
    expandHeader() {
        // Returns header and body to initial states when scrolled to the top
        this.body.classList.add('will-change-height');
        this.navContainer.classList.remove('nav-container-sticky');
        this.header.style.height = '70vh';
        this.header.style.boxShadow = 'unset';
        this.headerVid.classList.remove('d-none');
        this.headerVid.play();

        // Returns introduction msg and welcome section to initial state when scrolled to the top
        this.introMsg.classList.remove('h-0');
    },
    shrinkPlaceholderDiv() {
        this.bodyPlaceholder.style.height = '0';
        this.bodyPlaceholder.classList.replace('visible', 'invisible');
        this.bodyPlaceholder.classList.replace(
            'placeholder-div-reveal-end',
            'placeholder-div-reveal-start',
        );
    },
    replaceVidBg() {
        // To replace the header video bg when it ends
        this.header.style.background =
            "linear-gradient(rgba(31,111,139,0.8), rgba(0,0,0,0.6)), url('./img/base/laptop-keyboard.webp') no-repeat fixed 20% 20%";
        this.header.style.backgroundSize = 'cover';
    },
    fixedBottomHeader() {
        const mqLimit = window.matchMedia('(max-width: 767.98px)');
        mediaQueries(
            mqLimit,
            () => {
                this.header.classList.replace('sticky-top', 'fixed-bottom');
            },
            () => {
                this.header.classList.replace('fixed-bottom', 'sticky-top');
            },
        );
    },
    noFixedBottomHeader() {
        if (this.header.classList.contains('fixed-bottom'))
            this.header.classList.replace('fixed-bottom', 'sticky-top');
    },
    animateLetters() {
        // Wrap every letter in a span
        this.textWrapperMl13.innerHTML =
            this.textWrapperMl13.textContent.replace(
                /\S/g,
                "<span class='letter'>$&</span>",
            );
        anime
            .timeline({ loop: true })
            .add({
                targets: '.ml13 .letter',
                translateY: [100, 0],
                translateZ: 0,
                opacity: [0, 1],
                easing: 'easeOutExpo',
                duration: 600,
                delay: (el, i) => 300 + 30 * i,
            })
            .add({
                targets: '.ml13 .letter',
                translateY: [0, -100],
                opacity: [1, 0],
                easing: 'easeInExpo',
                duration: 600,
                delay: (el, i) => 6000 + 30 * i,
            });
    },
    changeAboutInfo() {
        if (this.summaryContainers[1].classList.contains('d-none')) {
            this.aboutSummaryWrapper.classList.add('opacity-0');
            setTimeout(() => {
                this.summaryContainers[0].classList.add('d-none', 'opacity-0');
                this.summaryContainers[1].classList.remove(
                    'd-none',
                    'opacity-0',
                );
                this.summaryBtn.innerHTML = `
                    <span class="circle" aria-hidden="true">
                        <i class="fas fa-info-circle"></i>
                    </span>

                    <span class="btn-text">
                        Learn More
                    </span>
                `;
            }, 205);
            setTimeout(() => {
                this.aboutSummaryWrapper.classList.remove('opacity-0');
            }, 350);
        } else if (this.summaryContainers[0].classList.contains('d-none')) {
            this.aboutSummaryWrapper.classList.add('opacity-0');
            setTimeout(() => {
                this.summaryContainers[1].classList.add('d-none', 'opacity-0');
                this.summaryContainers[0].classList.remove(
                    'd-none',
                    'opacity-0',
                );
                this.summaryBtn.innerHTML = `
                    <span class="circle" aria-hidden="true">
                        <i class="fas fa-info-circle"></i>
                    </span>

                    <span class="btn-text">
                        Learn More
                    </span>
                `;
            }, 205);
            setTimeout(() => {
                this.aboutSummaryWrapper.classList.remove('opacity-0');
            }, 350);
        }
    },
    growBtnOnClick(btn, size, time) {
        btn.style.transform = `scale(${size})`;
        setTimeout(() => {
            btn.style.transform = 'initial';
        }, time);
    },
    scrollHorizontally(el, px) {
        el.scrollLeft += px;
    },
    scrollStart(el, pxLimit) {
        if (el.scrollLeft >= el.scrollWidth - el.clientWidth - pxLimit) {
            el.scrollLeft = 0;
        }
    },
    scrollEnd(el, pxLimit) {
        if (el.scrollLeft <= pxLimit) {
            el.scrollLeft = el.scrollWidth - el.clientWidth;
        }
    },
    populateSkillRating(Skill) {
        this.skillRatingsBeginner.forEach((ratingDiv) => {
            ratingDiv.innerHTML = Skill.getRating('beginner');
        });
        this.skillRatingsNovice.forEach((ratingDiv) => {
            ratingDiv.innerHTML = Skill.getRating('novice');
        });
        this.skillRatingsIntermediate.forEach((ratingDiv) => {
            ratingDiv.innerHTML = Skill.getRating('intermediate');
        });
        this.skillRatingsAdvanced.forEach((ratingDiv) => {
            ratingDiv.innerHTML = Skill.getRating('advanced');
        });
        this.skillRatingsExpert.forEach((ratingDiv) => {
            ratingDiv.innerHTML = Skill.getRating('expert');
        });
    },
    displayFormValidationMsg() {
        // Updates UI with different success validation messages after failure to submit correctly
        if (
            this.invalidFeedbackFname &&
            window.getComputedStyle(this.invalidFeedbackFname).display != 'none'
        ) {
            this.validFeedbackFname.innerHTML =
                'Nice! You remembered your first name!';
        }
        if (
            this.invalidFeedbackLname &&
            window.getComputedStyle(this.invalidFeedbackLname).display != 'none'
        ) {
            this.validFeedbackLname.innerHTML = 'So you do have a last name...';
        }
        if (
            this.invalidFeedbackEmail &&
            window.getComputedStyle(this.invalidFeedbackEmail).display != 'none'
        ) {
            this.validFeedbackEmail.innerHTML =
                'Much better...please ensure that the spelling of your email is correct';
        }
        if (
            this.invalidFeedbackCountry &&
            window.getComputedStyle(this.invalidFeedbackCountry).display !=
                'none'
        ) {
            this.validFeedbackCountry.innerHTML = 'Welcome to Earth ' + `👽`;
        }
        if (
            this.invalidFeedbackMessage &&
            window.getComputedStyle(this.invalidFeedbackMessage).display !=
                'none'
        ) {
            this.validFeedbackMessage.innerHTML = 'Thank you, much better...';
        }
        return;
    },
};

export default UI;
